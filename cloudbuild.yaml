# Cloud Build configuration for automatic deployment from GitHub
steps:
  # Build the Docker image (with correct context for folder structure)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '--tag', 'gcr.io/$PROJECT_ID/replit-scraper:$COMMIT_SHA',
      '--tag', 'gcr.io/$PROJECT_ID/replit-scraper:latest',
      '--file', 'CloudScraperDeploy/Dockerfile',
      'CloudScraperDeploy'
    ]

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/replit-scraper:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/replit-scraper:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'replit-scraper',
      '--image', 'gcr.io/$PROJECT_ID/replit-scraper:$COMMIT_SHA',
      '--region', 'europe-west1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '3001',
      '--memory', '1Gi',
      '--cpu', '1',
      '--max-instances', '10',
      '--timeout', '300s',
      '--set-env-vars', 'NODE_ENV=production',
      '--set-secrets', 'GOOGLE_PLACES_API_KEY=google-places-api-key:latest'
    ]

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/replit-scraper:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/replit-scraper:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Timeout for the entire build
timeout: '1200s'